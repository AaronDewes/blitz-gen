name: Build image on push or PR
on: ["push", "pull_request"]

jobs:
    build:

        runs-on: ubuntu-20.04
        
        steps:
        
        - uses: actions/checkout@v2
          with:
            fetch-depth: 0

        - name: Set image name
          run: |
              echo "IMAGE_NAME=blitz-os-test"  >> $GITHUB_ENV
              echo "APT_PROXY=http://localhost:3142" >> $GITHUB_ENV
        - name: Cache apt packages
          uses: actions/cache@v2
          env:
            cache-name: apt-cacher-ng-cache
          with:
            path: /var/cache/apt-cacher-ng
            key: bullseye-${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('config') }}
            restore-keys: |
              bullseye-${{ runner.os }}-build-${{ env.cache-name }}-
              bullseye-${{ runner.os }}-build-
              bullseye-${{ runner.os }}-
        - name: Run build script
          run: |
              echo "Building $IMAGE_NAME"
              cat <<EOF > config
              IMG_NAME=$IMAGE_NAME
              IMG_FILENAME=$IMAGE_NAME
              ZIP_FILENAME=$IMAGE_NAME
              EOF
              sudo IMG_FILENAME=$IMAGE_NAME ZIP_FILENAME=$IMAGE_NAME CITADEL_OS_VERSION=$CITADEL_OS_VERSION ./build-docker.sh
        - name: Copy ZIP to current working dir
          run: cp deploy/*.zip ./

        - name: Debug current working dir
          run: ls -la

        - name: Upload artifact
          uses: actions/upload-artifact@v2
          with:
            path: ${{ env.IMAGE_NAME }}.zip
            name: ${{ env.IMAGE_NAME }}.zip
